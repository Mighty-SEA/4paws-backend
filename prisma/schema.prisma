// Datasource & Generator
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum Role {
  MANAGER
  DOCTOR
  PARAVET
  GROOMER
  CASHIER
}

// Models (initial scope for Backend 1)
model User {
  id           Int     @id @default(autoincrement())
  username     String  @unique
  passwordHash String
  role         Role
  staff        Staff?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Staff {
  id     Int   @id @default(autoincrement())
  userId Int   @unique
  name   String
  role   Role
  user   User  @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// Backend 2: Owners & Pets
model Owner {
  id        Int     @id @default(autoincrement())
  name      String
  phone     String
  address   String
  pets      Pet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pet {
  id        Int     @id @default(autoincrement())
  ownerId   Int
  name      String
  species   String
  breed     String
  birthdate DateTime
  owner     Owner   @relation(fields: [ownerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Backend 3: Services & Service Types
model Service {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  types     ServiceType[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ServiceType {
  id           Int      @id @default(autoincrement())
  serviceId    Int
  name         String
  price        Decimal  @db.Decimal(12,2)
  pricePerDay  Decimal? @db.Decimal(12,2)
  service      Service  @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


